# @format
---
- name: lrvl ws - Copy .env.example to .env if not exists
  command: cp .env.example .env
  args:
    chdir: "{{ laravel_app_path_ws }}"
    creates: "{{ laravel_app_path_ws }}/.env"

- name: lrvl ws - Ganti DB_CONNECTION dari sqlite ke mysql_post
  lineinfile:
    path: "{{ laravel_app_path_ws }}/.env"
    regexp: "^DB_CONNECTION="
    line: "DB_CONNECTION={{ laravel_db_connection_ws_post }}"
    backrefs: yes
    insertafter: EOF
    state: present

# gunkana ip saat berjalan dengan set facts
- name: lrvl ws - Set DB_HOST POST in .env (auto-uncomment)
  lineinfile:
    path: "{{ laravel_app_path_ws }}/.env"
    regexp: '^#?\s*DB_POST_HOST='
    line: "DB_POST_HOST={{ hostvars[groups['mysql_master_new'][0]]['ansible_default_ipv4']['address'] }}"
    insertafter: EOF
    state: present

- name: lrvl ws - Set DB_HOST GET in .env (auto-uncomment)
  lineinfile:
    path: "{{ laravel_app_path_ws }}/.env"
    regexp: '^#?\s*DB_GET_HOST='
    line: "DB_GET_HOST={{ hostvars[groups['mysql_slave_new'][0]]['ansible_default_ipv4']['address'] }}"
    insertafter: EOF
    state: present

- name: lrvl ws - Set DB port POST in .env
  lineinfile:
    path: "{{ laravel_app_path_ws }}/.env"
    regexp: '^#?\s*DB_POST_PORT='
    line: "DB_POST_PORT={{ laravel_db_port_ws }}"
    insertafter: EOF
    state: present

- name: lrvl ws - Set DB port GET in .env
  lineinfile:
    path: "{{ laravel_app_path_ws }}/.env"
    regexp: '^#?\s*DB_GET_PORT='
    line: "DB_GET_PORT={{ laravel_db_port_ws }}"
    insertafter: EOF
    state: present

- name: lrvl ws - Set DB name POST in .env
  lineinfile:
    path: "{{ laravel_app_path_ws }}/.env"
    regexp: '^#?\s*DB_POST_DATABASE='
    line: "DB_POST_DATABASE={{ laravel_db_name_ws }}"
    insertafter: EOF
    state: present

- name: lrvl ws - Set DB name GET in .env
  lineinfile:
    path: "{{ laravel_app_path_ws }}/.env"
    regexp: '^#?\s*DB_GET_DATABASE='
    line: "DB_GET_DATABASE={{ laravel_db_name_ws }}"
    insertafter: EOF
    state: present

#user create in mysql master launch and create when installation
- name: lrvl ws - Set DB user in POST .env
  lineinfile:
    path: "{{ laravel_app_path_ws }}/.env"
    regexp: '^#?\s*DB_POST_USERNAME='
    line: "DB_POST_USERNAME={{ mysql_new_username_ws }}"
    insertafter: EOF
    state: present

- name: lrvl ws - Set DB user GET in .env
  lineinfile:
    path: "{{ laravel_app_path_ws }}/.env"
    regexp: '^#?\s*DB_GET_USERNAME='
    line: "DB_GET_USERNAME={{ mysql_new_username_ws_get }}"
    insertafter: EOF
    state: present

- name: lrvl ws - Set DB password POST in .env with double quotes
  lineinfile:
    path: "{{ laravel_app_path_ws }}/.env"
    regexp: '^#?\s*DB_POST_PASSWORD='
    line: 'DB_POST_PASSWORD="{{ mysql_new_password_ws }}"'
    insertafter: EOF
    state: present

- name: lrvl ws - Set DB password GET in .env with double quotes
  lineinfile:
    path: "{{ laravel_app_path_ws }}/.env"
    regexp: '^#?\s*DB_GET_PASSWORD='
    line: 'DB_GET_PASSWORD="{{ mysql_new_password_ws_get }}"'
    insertafter: EOF
    state: present

- name: lrvl ws - Set APP_DEBUG to false for production
  lineinfile:
    path: "{{ laravel_app_path_ws }}/.env"
    regexp: '^#?\s*APP_DEBUG='
    line: "APP_DEBUG=false"
  when: env == 'prod'

- name: lrvl ws - Set APP_DEBUG to true for development
  lineinfile:
    path: "{{ laravel_app_path_ws }}/.env"
    regexp: '^#?\s*APP_DEBUG='
    line: "APP_DEBUG=true"
  when: env == 'dev'

- name: lrvl ws - Set APP_ENV to production
  lineinfile:
    path: "{{ laravel_app_path_ws }}/.env"
    regexp: '^#?\s*APP_ENV='
    line: "APP_ENV=production"
  when: env == 'prod'

- name: lrvl ws - Set APP_ENV to local for development
  lineinfile:
    path: "{{ laravel_app_path_ws }}/.env"
    regexp: '^#?\s*APP_ENV='
    line: "APP_ENV=local"
  when: env == 'dev'
# - name: lrvl ws - Set or update VITE_ALLOWED_HOST in .env
#   lineinfile:
#     path: "{{ laravel_app_path_ws }}/.env"
#     regexp: '^#?\s*VITE_ALLOWED_HOST='
#     line: "VITE_ALLOWED_HOST={{ host_allowed }}"
