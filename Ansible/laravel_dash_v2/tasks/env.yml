# @format
---
- name: lrv dashboard - Copy .env.example to .env if not exists
  command: cp .env.example .env
  args:
    chdir: "{{ laravel_app_path_dashboard }}"
    creates: "{{ laravel_app_path_dashboard }}/.env"

- name: lrv dashboard - Ganti DB_CONNECTION dari sqlite ke mysql_get
  lineinfile:
    path: "{{ laravel_app_path_dashboard }}/.env"
    regexp: "^DB_CONNECTION="
    line: "DB_CONNECTION={{ laravel_db_connection_dashboard_get }}"
    backrefs: yes
    insertafter: EOF
    state: present

# gunkana ip saat berjalan dengan set facts
- name: lrv dashboard - Set DB_POST_HOST in .env (auto-uncomment)
  lineinfile:
    path: "{{ laravel_app_path_dashboard }}/.env"
    regexp: '^#?\s*DB_POST_HOST='
    line: "DB_POST_HOST={{ hostvars[groups['mysql_master_new'][0]]['ansible_default_ipv4']['address'] }}"
    insertafter: EOF
    state: present

- name: lrv dashboard - Set DB_GET_HOST in .env (auto-uncomment)
  lineinfile:
    path: "{{ laravel_app_path_dashboard }}/.env"
    regexp: '^#?\s*DB_GET_HOST='
    line: "DB_GET_HOST={{ hostvars[groups['mysql_slave_new'][0]]['ansible_default_ipv4']['address'] }}"
    insertafter: EOF
    state: present

- name: lrv dashboard - Set DB POST port in .env
  lineinfile:
    path: "{{ laravel_app_path_dashboard }}/.env"
    regexp: '^#?\s*DB_POST_PORT='
    line: "DB_POST_PORT={{ laravel_db_port_dashboard }}"
    insertafter: EOF
    state: present

- name: lrv dashboard - Set DB GET port in .env
  lineinfile:
    path: "{{ laravel_app_path_dashboard }}/.env"
    regexp: '^#?\s*DB_GET_PORT='
    line: "DB_GET_PORT={{ laravel_db_port_dashboard }}"

- name: lrv dashboard - Set DB name POST in .env
  lineinfile:
    path: "{{ laravel_app_path_dashboard }}/.env"
    regexp: '^#?\s*DB_POST_DATABASE='
    line: "DB_POST_DATABASE={{ laravel_db_name_dashboard }}"
    insertafter: EOF
    state: present

- name: lrv dashboard - Set DB name GET in .env
  lineinfile:
    path: "{{ laravel_app_path_dashboard }}/.env"
    regexp: '^#?\s*DB_GET_DATABASE='
    line: "DB_GET_DATABASE={{ laravel_db_name_dashboard }}"
    insertafter: EOF
    state: present

#user dan pdassword ada di mysql master dibuat dan sama

- name: lrv dashboard - Set DB user POST in .env
  lineinfile:
    path: "{{ laravel_app_path_dashboard }}/.env"
    regexp: '^#?\s*DB_POST_USERNAME='
    line: "DB_POST_USERNAME={{ mysql_new_username_dashboard_post }}"
    insertafter: EOF
    state: present

- name: lrv dashboard - Set DB user GET in .env
  lineinfile:
    path: "{{ laravel_app_path_dashboard }}/.env"
    regexp: '^#?\s*DB_GET_USERNAME='
    line: "DB_GET_USERNAME={{ mysql_new_username_dashboard_get }}"
    insertafter: EOF
    state: present

- name: lrv dashboard - Set DB password POST in .env with double quotes
  lineinfile:
    path: "{{ laravel_app_path_dashboard }}/.env"
    regexp: '^#?\s*DB_POST_PASSWORD='
    line: 'DB_POST_PASSWORD="{{ mysql_new_password_dashboard_post }}"'
    insertafter: EOF
    state: present

- name: lrv dashboard - Set DB password GET in .env with double quotes
  lineinfile:
    path: "{{ laravel_app_path_dashboard }}/.env"
    regexp: '^#?\s*DB_GET_PASSWORD='
    line: 'DB_GET_PASSWORD="{{ mysql_new_password_dashboard_get }}"'
    insertafter: EOF
    state: present

- name: lrv dashboard - Set APP_DEBUG to false for production
  lineinfile:
    path: "{{ laravel_app_path_dashboard }}/.env"
    regexp: '^#?\s*APP_DEBUG='
    line: "APP_DEBUG=false"
    insertafter: EOF
    state: present
  when: env == 'prod'

- name: lrv dashboard - Set APP_DEBUG to true for development
  lineinfile:
    path: "{{ laravel_app_path_dashboard }}/.env"
    regexp: '^#?\s*APP_DEBUG='
    line: "APP_DEBUG=true"
    insertafter: EOF
    state: present
  when: env == 'dev'

- name: lrv dashboard - Set APP_ENV to production
  lineinfile:
    path: "{{ laravel_app_path_dashboard }}/.env"
    regexp: '^#?\s*APP_ENV='
    line: "APP_ENV=production"
    insertafter: EOF
    state: present
  when: env == 'prod'

- name: lrv dashboard - Set APP_ENV to local for development
  lineinfile:
    path: "{{ laravel_app_path_dashboard }}/.env"
    regexp: '^#?\s*APP_ENV='
    line: "APP_ENV=local"
    insertafter: EOF
    state: present
  when: env == 'dev'
